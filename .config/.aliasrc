#!/bin/bash

[[ -f "$HOME/.config/.dockerrc" ]] && source "$HOME/.config/.dockerrc"
[[ -f "$HOME/.config/.fzfrc" ]] && source "$HOME/.config/.fzfrc"
[[ -f "$HOME/.config/.cleanrc" ]] && source "$HOME/.config/.cleanrc"
[[ -f "$HOME/.config/.secret_aliases" ]] && source "$HOME/.config/.secret_aliases"

# Generic Shortcuts
alias \
  l="ls -a --color=auto --group-directories-first" \
  ll="ls -al --color=auto --group-directories-first" \
  lc="ls -alC --color=auto --group-directories-first" \
  reload="source ~/.profile" \
  sudosu="sudo -E bash" \
  grep="grep --color" \
  egrep="egrep --color" \
  todo="vim /tmp/TODO" \
  d="mv -t /tmp" \
  brightness="redshift -l 39.57:75.9 -P -r -o -b"


# Virtual env shortcuts
alias \
  va='source venv/bin/activate' \
  vd='deactivate'

# Misc
alias \
  val="valgrind -v --leak-check=full --track-origins=yes --show-leak-kinds=all " \
  tree='tree -C -I "*node*|*venv*|*cache*|*dist*|*CMakeFiles*|*Target*|*target*"'

# Git
alias \
  gs="git status -sb" \
  gsv="git status -vvb" \
  gd="git diff --color-words" \
  gl="git log --graph --abbrev-commit --decorate --date=relative --all"

gci() {
  git status &> /dev/null || { echo "Not in a git repo"; return; }
  git branch -a | cut -d" " -f2- | xargs -I{} basename {} | sort | uniq | \
    fzf -0 --reverse --prompt "Checkout ($(git branch --show-current)): " \
        --preview "git diff --color=always HEAD {}" --preview-window up | \
        xargs -I{} git checkout {}
}

# Git Watchers
alias \
  gsw="watch 'git status -sb'" \
  gbw="watch 'git branch -v'"

# Use Neovim
command -v nvim >/dev/null && alias vim="nvim" vimdiff="nvim -d"

# Functions
dots() {
  if [[ -e "$HOME/repos/dotfiles" ]]; then
    git --git-dir=$HOME/repos/dotfiles/.git --work-tree=$HOME "$@"
  else
    echo "Must clone github.com/ephjos/dotfiles to ~/repos/dotfiles"
  fi
}

findman() {
  apropos . | fzf -0 -e | awk '{print $1}' | xargs -ri bash -c "man -Tpdf '{}' | zathura -"
}

filewatch() {
  while inotifywait --exclude .swp -e modify -r . &> /dev/null; do clear; $@; done;
}
